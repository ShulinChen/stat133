1+ 3
hello
a -> "sda"
a >= "sda"
a = "sda"
a
load(url("http://gastonsanchez.com/teaching/stat133/raiders.RData"))
scored[18]
scored
scored2 = scored
scored
names(scored2) <- 1:length(scored)
class(year)
class(year)
# use length() to determine whether the three vectors
# have the same number of elements
class(year)
ls()
rm(response)
# Install the package "httr", and load it
install.packages("httr")
library(httr)
# now load the data from the github repository of the course
response <- GET(url="https://github.com/gastonstat/stat133/raw/master/datasets/superbowl_teams.RData")
load(rawConnection(response$content))
rm(response)
# inspect the objects with ls()
# (you should be able to see three vectors)
ls()
# year: year of superbowl from 1967 to 2015
# winner: champions
# loser: losing teams
# find the class of each vector (year, winner, loser)
class(year)
class(year)
class(winner)
class(loser)
length(year)
length(winner)
length(loser)
# get the first 5 champions
winner[1:5]
# get the last 5 champions
winner[-5:-1]
# get the last 5 champions
winner[-5:-1]
winner[-5:]
# get the last 5 champions
tail(winner,5)
winner[1:5]
head(winner 5)
winner[1:5]
head(winner, 5)
unique(winner)
count(unique(winner))
length(unique(winner))
sort(winner)
sort(unique(winner))
sort(unique(winner),decreasing = TRUE)
length(null)
length(NULL)
# =====================================================
# Stat133: Lab 2
# Author: Gaston Sanchez
# Description: Basics of data frames
# Data: Star Wars characters
# =====================================================
# To read the data, we'll use the package "readr"
# To install "readr" type:
install.packages("readr")
# Remember that you only need to install a package once
# load "readr
library("readr")
# read data using read_csv()
# (read_csv() does not convert strings into factors)
sw <- read_csv("https://raw.githubusercontent.com/gastonstat/stat133/master/datasets/starwarstoy.csv")
# use str() to get information about the data frame structure
str(sw)
View(sw)
View(sw)
# use summary() to get some descriptive statistics
summary(sw)
summary(sw)
summary(sw)
summary(sw)
summary(sw)
# convert column 'gender' as a factor
class(gender)
class(sw.gender)
class(sw.gender)
factor(sw.gender)
factor(sw[2])
factor(sw[2])
class(sw[2])
class(c(sw[2]))
factor(c(sw[2]))
factor(c(sw[2]))
summary(sw[2])
factor(as.factor(sw[2]))
factor(as.factor(sw[2]))
class(as.factor(sw[2]))
as.factor(sw[2])
head(sw[2])
?as.factor()
sw[2]
factor(sw[2])
class(as.vector(sw[2]))
factor(as.vector(sw[2]))
as.factor(sw[2],levels=c('male','female'))
class(sw[2])
View(sw)
class(sw[1])
class(sw[4])
class(sw[,2])
as.factor(sw[,2])
as.factor(sw[,2])
as.vector(sw[,2])
calss(sw[,2])
class(sw[,2])
factor(sw[,2])
summary(sw[2])
summary(sw[,2])
summary(sw[2])
summary(sw[,2])
summary(sw[2])
summary(sw[,2])
summary(sw[2])
summary(sw[,2])
table(sw[,2])
max(sw[,3])
min(sw[,3])
avg(sw[,3])
?mean()
mean(sw[,3])
sort(height)
sort(height)
sort(sw[,3])
sort(sw[,3], decreasing = TRUE)
setwd("/Users/Shulin/programming/stat133/lab02")
source("ShulinChen_lab2.R", echo=T, keep.source=TRUE, max.deparse.length=Inf)
setwd("/Users/Shulin/programming/stat133/lab02")
source("ShulinChen_lab2.R", echo=T, keep.source=TRUE, max.deparse.length=Inf)
setwd("/Users/Shulin/programming/stat133/lab02")
source("ShulinChen_lab2.R", echo=T, keep.source=TRUE, max.deparse.length=Inf)
install.packages("readr")
setwd("/Users/Shulin/programming/stat133")
source("ShulinChen_lab2.R", echo=T, keep.source=TRUE, max.deparse.length=Inf)
setwd("/Users/Shulin/programming/stat133/lab02")
setwd("/Users/Shulin/programming/stat133/lab02")
source("ShulinChen_lab2.R", echo=T, keep.source=TRUE, max.deparse.length=Inf)
sw[sw$height == min(sw$height),]$name
setwd("/Users/Shulin/programming/stat133/lab02")
sw$height == min(sw$height)
class(sw$height == min(sw$height))
sw[TRUE, ]
sw[TRUE]
sw[sw$height == min(sw$height), 1]
str(sw)
sw <- read_csv("https://raw.githubusercontent.com/gastonstat/stat133/master/datasets/starwarstoy.csv")
sw
sw[sw$height == max(sw$height),]$name
sort(sw$height)
sort(sw[,3])
sort(sw$height, decreasing = TRUE)
sw[sw$weapon == 'knife']
sw[sw$weapon == 'knife', ]
sw[sw$weapon == 'blaster', ]
sw[sw$weapon == 'knife', ]
unique(sw$weapon)
sw
sw[sw$weapon == 'knife', ]
sw[sw$weapon == 'blaster', ]
length(sw[sw$weapon == 'blaster', ])
length(sw[sw$weapon == 'knife', ])
sw[sw$height > 2, ]
sw[sw$height < 0.5 or sw$weight < 50]
sw[sw$height < 0.5 OR sw$weight < 50]
sw[sw$height < 0.5 || sw$weight < 50]
sw[sw$height < 0.5 || sw$weight < 50, ]
unique(sw$weapon)
unique(sw$species)
unique(sw$species)
sw
sw[ sw$weight < 50, ]
sw[sw$height < 0.5 | sw$weight < 50, ]
unique(sw$weapon)
unique(sw$species)
length(unique(sw$species))
class(unique(sw$weapon))
sw[1,]
sw
sw[sw$name = 'Han Solo']
sw[sw$name = 'Han Solo', ]
sw[sw$name == 'Han Solo', ]
sw[sw$height == sw$min(height),]
sw[sw$height == min(sw$height),]
sw[sw$height == min(sw$height), ]
sw[sw$gender == "male",]
sw[sw$height < 1.7, ]
sw[sw$height < 1.7 & sw$weight < 50]
sw[sw$height < 1.7 & sw$weight < 50,]
sw[sw$height < 1.7 & sw$weight < 50, ]
sw
sw[sw$species == "droids" | sw$species == "humans"]
sw[sw$species == "droids" | sw$species == "humans", ]
sw[sw$species == "droid" | sw$species == "human", ]
sw[!sw$species == "human", ]
$sw
sw
?subset
subset(sw, name == "Han Solo")
subset(sw, height = min(height))
subset(sw, height == min(height))
subset(sw, min(height))
subset(sw, height == min(height))
subset(sw, gender == "male")
subset(sw, height < 1.7)
subset(sw, height < 1.7 & weight < 50)
subset(sw, species == "droid" | species == "human")
subset(sw, species != "human")
sort(height)
sort(sw$height)
?sort
sort(sw, height)
sw
sw(sw$jedi == "jedi")
sw[sw$jedi == "jedi"]
sw[sw$jedi == "jedi",]
sw
sw[sw$jedi != "jedi",]
sw
sw[sw$species != "human",]
sw[sw$jedi != "jedi",]
sort(sw$height)
"knife" %in% sw$weapon
sort(sw$height)
sw[order(sw$height), ]
order?
asd
a
order()?
asd
dsa
sda
sda
sw[order(sw$height), ]
max
max?
asd
max()?
asd
?sort
?max
?order
order(sw$height)
sw[7,]
sw(order(sw$weight), decreasing=TRUE)
sw[order(sw$weight), decreasing=TRUE)]
sw[order(sw$weight), decreasing=TRUE]
sw[order(sw$weight, decreasing=TRUE), ]
sort[order(sw$gender), ]
sw[order(sw$gender), ]
sw[order(sw$species), ]
sw[sw$weight > mean(sw$weight), ]
mean(sw$weight)
sw
sw[sw$species == "human" & sw$weapon == "unarmed"]
length(sw[sw$species == "human" & sw$weapon == "unarmed"])
?sd
sd(sw)
sd(sw$weight)
sd(sw$weight[sw$species != "human"])
sw$name[sw$weapon == "lightsaber"]
sw[sw$name[sw$weapon == "lightsaber"], ]
sw$name[sw$weapon == "lightsaber"]
sw
median(sw$height[sw$species != "human"])
sw$weight[sw$jedi == "no_jedi"]^2
?log
log(sw$species == "blaster" & sw$species == "bowcaster")
log(sw$height[species == "blaster" & sw$species == "bowcaster"])
log(sw$height[sw$species == "blaster" & sw$species == "bowcaster"])
log(sw$height[sw$weapon == "blaster" | sw$weapon == "bowcaster"])
log(sw$height[sw$weapon == "blaster" | sw$weapon == "bowcaster"])
?plot
plot(sw$height, sw$weight)
newvar <- sw$height / sw$weight
newvar <- sw$height / sw$weight
sw$newvar <- newvar
View(sw)
View(sw)
View(sw)
View(sw)
# To read the data, we'll use the package "readr"
# To install "readr" type:
install.packages("readr")
install.packages("readr")
# Remember that you only need to install a package once
# load "readr
library("readr")
# read data using read_csv()
# (read_csv() does not convert strings into factors)
sw <- read_csv("https://raw.githubusercontent.com/gastonstat/stat133/master/datasets/starwarstoy.csv")
str(sw)
# use str() to get information about the data frame structure
# use summary() to get some descriptive statistics
summary(sw)
# convert column 'gender' as a factor
factor(sw[,2])
# apply summary() on gender
summary(sw[,2])
# apply table() on gender
table(sw[,2])
max(sw[,3])
min(sw[,3])
# what's the minimum height value
# who has the smallest height
# who has the largest height
# sort height
# what's the largest height value
# what's the average height
mean(sw[,3])
sw[sw$height == min(sw$height),]$name
sort(sw$height, decreasing = TRUE)
#sort(sw[,3])
"knife" %in% sw$weapon
# Because sw[sw$height > 2, ] returns something
# are there any subjects with
# sort weight in decrasing order
# are there any subjects with weapon "knife"
sw[sw$height < 0.5 | sw$weight < 50, ]
# are there any subjects with height > 2 meters
# height < 0.5 or weight < 50
Yes
# what are the unique weapons
sort(sw$height)
sw[sw$height == max(sw$height),]$name
unique(sw$weapon)
# how many different species
length(unique(sw$species))
Yes
sw$name[sw$height > 2]
sw[sw$height > 2, 1]
